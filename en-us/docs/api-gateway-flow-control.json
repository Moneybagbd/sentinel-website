{
  "filename": "api-gateway-flow-control.md",
  "__html": "<h1>API Gateway Flow Control</h1>\n<p>Sentinel supports flow control for API gateways including Spring Cloud Gateway and Zuul 1.x.</p>\n<h2>Spring Cloud Gateway</h2>\n<p>Sentinel provides the integration module with Spring Cloud Gateway, providing two levels of flow control:</p>\n<ul>\n<li>Route level: flow control for defined routes in Spring properties file.</li>\n<li>Customized API group level: flow control for customized API groups defined in <code>GatewayApiDefinitionManager</code> of Sentinel.</li>\n</ul>\n<p>Add the following dependency in <code>pom.xml</code> (if you are using Maven):</p>\n<pre><code class=\"language-xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dependency</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">groupId</span>&gt;</span>com.alibaba.csp<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">groupId</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">artifactId</span>&gt;</span>sentinel-spring-cloud-gateway-adapter<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">artifactId</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">version</span>&gt;</span>x.y.z<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">version</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dependency</span>&gt;</span>\n</code></pre>\n<p>Then you only need to inject the corresponding <code>SentinelGatewayFilter</code> and <code>SentinelGatewayBlockExceptionHandler</code> instance\nin Spring configuration. For example:</p>\n<pre><code class=\"language-java\"><span class=\"hljs-meta\">@Configuration</span>\n<span class=\"hljs-keyword\">public</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">GatewayConfiguration</span> </span>{\n\n    <span class=\"hljs-keyword\">private</span> <span class=\"hljs-keyword\">final</span> List&lt;ViewResolver&gt; viewResolvers;\n    <span class=\"hljs-keyword\">private</span> <span class=\"hljs-keyword\">final</span> ServerCodecConfigurer serverCodecConfigurer;\n\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-title\">GatewayConfiguration</span><span class=\"hljs-params\">(ObjectProvider&lt;List&lt;ViewResolver&gt;&gt; viewResolversProvider,\n                                ServerCodecConfigurer serverCodecConfigurer)</span> </span>{\n        <span class=\"hljs-keyword\">this</span>.viewResolvers = viewResolversProvider.getIfAvailable(Collections::emptyList);\n        <span class=\"hljs-keyword\">this</span>.serverCodecConfigurer = serverCodecConfigurer;\n    }\n\n    <span class=\"hljs-meta\">@Bean</span>\n    <span class=\"hljs-meta\">@Order</span>(-<span class=\"hljs-number\">1</span>)\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> SentinelGatewayBlockExceptionHandler <span class=\"hljs-title\">sentinelGatewayBlockExceptionHandler</span><span class=\"hljs-params\">()</span> </span>{\n        <span class=\"hljs-comment\">// Register the block exception handler for Spring Cloud Gateway.</span>\n        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">new</span> SentinelGatewayBlockExceptionHandler(viewResolvers, serverCodecConfigurer);\n    }\n\n    <span class=\"hljs-meta\">@Bean</span>\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> GlobalFilter <span class=\"hljs-title\">sentinelGatewayFilter</span><span class=\"hljs-params\">()</span> </span>{\n        <span class=\"hljs-comment\">// By default the order is HIGHEST_PRECEDENCE</span>\n        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">new</span> SentinelGatewayFilter();\n    }\n}\n</code></pre>\n<p>The gateway adapter will regard all <code>routeId</code> (defined in Spring properties) and all customized API definitions\n(defined in <code>GatewayApiDefinitionManager</code> of <code>sentinel-api-gateway-adapter-common</code> module) as resources.</p>\n<p>You can register various kinds of customized callback in <code>GatewayCallbackManager</code>:</p>\n<ul>\n<li><code>setBlockHandler</code>: register a customized <code>BlockRequestHandler</code> to handle the blocked request. The default implementation is <code>DefaultBlockRequestHandler</code>, which returns default message like <code>Blocked by Sentinel: FlowException</code>.</li>\n</ul>\n<h2>Zuul 1.x</h2>\n<p>Sentinel provides the integration module with Zuul 1.x, providing two levels of flow control:</p>\n<ul>\n<li>Route level: flow control for defined routes in Zuul properties file.</li>\n<li>Customized API group level: flow control for customized API groups defined in <code>GatewayApiDefinitionManager</code> of Sentinel.</li>\n</ul>\n<p>To introduce Sentinel to your Zuul gateway, add the following dependency in <code>pom.xml</code> (if you are using Maven):</p>\n<pre><code class=\"language-xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dependency</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">groupId</span>&gt;</span>com.alibaba.csp<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">groupId</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">artifactId</span>&gt;</span>sentinel-zuul-adapter<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">artifactId</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">version</span>&gt;</span>x.y.z<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">version</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dependency</span>&gt;</span>\n</code></pre>\n<p>Then for Spring Cloud Zuul users, we only need to inject the three filters in Spring configuration class like this:</p>\n<pre><code class=\"language-java\"><span class=\"hljs-meta\">@Configuration</span>\n<span class=\"hljs-keyword\">public</span> <span class=\"hljs-class\"><span class=\"hljs-keyword\">class</span> <span class=\"hljs-title\">ZuulConfig</span> </span>{\n\n    <span class=\"hljs-meta\">@Bean</span>\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> ZuulFilter <span class=\"hljs-title\">sentinelZuulPreFilter</span><span class=\"hljs-params\">()</span> </span>{\n        <span class=\"hljs-comment\">// We can provider the filter order here.</span>\n        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">new</span> SentinelZuulPreFilter(<span class=\"hljs-number\">10000</span>);\n    }\n\n    <span class=\"hljs-meta\">@Bean</span>\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> ZuulFilter <span class=\"hljs-title\">sentinelZuulPostFilter</span><span class=\"hljs-params\">()</span> </span>{\n        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">new</span> SentinelZuulPostFilter(<span class=\"hljs-number\">1000</span>);\n    }\n\n    <span class=\"hljs-meta\">@Bean</span>\n    <span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> ZuulFilter <span class=\"hljs-title\">sentinelZuulErrorFilter</span><span class=\"hljs-params\">()</span> </span>{\n        <span class=\"hljs-keyword\">return</span> <span class=\"hljs-keyword\">new</span> SentinelZuulErrorFilter(-<span class=\"hljs-number\">1</span>);\n    }\n}\n</code></pre>\n"
}