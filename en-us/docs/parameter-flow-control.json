{
  "filename": "parameter-flow-control.md",
  "__html": "<h1>Parameter Flow Control</h1>\n<p>Sentinel provides support for flow control by frequent (&quot;hot spot&quot;) parameters.</p>\n<h2>Usage</h2>\n<p>To use Sentinel Parameter Flow Control, you need to add the following dependency to <code>pom.xml</code>:</p>\n<pre><code class=\"language-xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dependency</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">groupId</span>&gt;</span>com.alibaba.csp<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">groupId</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">artifactId</span>&gt;</span>sentinel-parameter-flow-control<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">artifactId</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">version</span>&gt;</span>x.y.z<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">version</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dependency</span>&gt;</span>\n</code></pre>\n<p>First you need to pass parameters with the following <code>SphU.entry</code> overloaded methods:</p>\n<pre><code class=\"language-java\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> Entry <span class=\"hljs-title\">entry</span><span class=\"hljs-params\">(String name, EntryType type, <span class=\"hljs-keyword\">int</span> count, Object... args)</span> <span class=\"hljs-keyword\">throws</span> BlockException\n\n<span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> Entry <span class=\"hljs-title\">entry</span><span class=\"hljs-params\">(Method method, EntryType type, <span class=\"hljs-keyword\">int</span> count, Object... args)</span> <span class=\"hljs-keyword\">throws</span> BlockException\n</span></code></pre>\n<p>For example, if there are two parameters to provide, you can:</p>\n<pre><code class=\"language-java\"><span class=\"hljs-comment\">// paramA in index 0, paramB in index 1.</span>\nSphU.entry(resourceName, EntryType.IN, <span class=\"hljs-number\">1</span>, paramA, paramB);\n</code></pre>\n<p>Then you can configure parameter flow control rules via <code>loadRules</code> method in <code>ParamFlowRuleManager</code>:</p>\n<pre><code class=\"language-java\"><span class=\"hljs-comment\">// QPS mode, threshold is 5 for every frequent \"hot spot\" parameter in index 0 (the first arg).</span>\nParamFlowRule rule = <span class=\"hljs-keyword\">new</span> ParamFlowRule(RESOURCE_KEY)\n    .setParamIdx(<span class=\"hljs-number\">0</span>)\n    .setCount(<span class=\"hljs-number\">5</span>);\n<span class=\"hljs-comment\">// We can set threshold count for specific parameter value individually.</span>\n<span class=\"hljs-comment\">// Here we add an exception item. That means: QPS threshold of entries with parameter `PARAM_B` (type: int)</span>\n<span class=\"hljs-comment\">// in index 0 will be 10, rather than the global threshold (5).</span>\nParamFlowItem item = <span class=\"hljs-keyword\">new</span> ParamFlowItem().setObject(String.valueOf(PARAM_B))\n    .setClassType(<span class=\"hljs-keyword\">int</span>.class.getName())\n    .setCount(<span class=\"hljs-number\">10</span>);\nrule.setParamFlowItemList(Collections.singletonList(item));\nParamFlowRuleManager.loadRules(Collections.singletonList(rule));\n</code></pre>\n<p>The description for fields of <code>ParamFlowRule</code>:</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">Field</th>\n<th style=\"text-align:left\">Description</th>\n<th style=\"text-align:left\">Default</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">resource</td>\n<td style=\"text-align:left\">resource name (<strong>required</strong>)</td>\n<td style=\"text-align:left\"></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">count</td>\n<td style=\"text-align:left\">flow control threshold (<strong>required</strong>)</td>\n<td style=\"text-align:left\"></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">grade</td>\n<td style=\"text-align:left\">metric type (QPS or thread count)</td>\n<td style=\"text-align:left\">QPS mode</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">paramIdx</td>\n<td style=\"text-align:left\">the index of provided parameter in <code>SphU.entry(xxx, args)</code> (<strong>required</strong>)</td>\n<td style=\"text-align:left\"></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">paramFlowItemList</td>\n<td style=\"text-align:left\">the exception items of parameter; you can set threshold to a specific parameter value</td>\n<td style=\"text-align:left\"></td>\n</tr>\n</tbody>\n</table>\n<p>Now the parameter flow control rules will take effect.</p>\n<p>You could refer to the sample here: <a href=\"https://github.com/alibaba/Sentinel/tree/master/sentinel-demo/sentinel-demo-parameter-flow-control\">sentinel-demo-parameter-flow-control</a></p>\n"
}