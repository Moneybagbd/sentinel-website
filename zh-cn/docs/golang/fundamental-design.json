{
  "filename": "fundamental-design.md",
  "__html": "<h1>核心设计</h1>\n<h2>Slot Chain</h2>\n<ul>\n<li><code>StatPrepareSlot</code>：处于整个 chain 最开始的部分，用于初始化一些必要的统计结构。执行方式为顺序执行，不应出现异常。</li>\n<li><code>RuleCheckerSlot</code>：用于规则检查，执行方式为顺序执行，规则检查的状态包装在返回值内 <code>TokenResult</code>。若返回状态不为 Blocked 则继续执行，若为 Blocked 则中断执行并返回 Blocked。</li>\n<li><code>StatSlot</code>：根据规则检查的结果，更新统计数据并做一些额外的记录（如记录日志、将事件透传给外部）。StatSlot 包含三个函数：<code>OnEntryPassed</code>（允许通过时触发）、<code>OnEntryBlocked</code>（请求被拒绝时触发）和 <code>OnCompleted</code>（请求完成时触发）。</li>\n</ul>\n<p>Slot 的每次 Entry 传递当前的 EntryContext。</p>\n<h2>TokenResult</h2>\n<p>TokenResult 由每个 RuleCheckerSlot 返回，指示控制行为：</p>\n<ul>\n<li><code>ResultStatusPass</code>: 当前 slot 允许通过，可以执行后续的 slot</li>\n<li><code>ResultStatusBlocked</code>: 当前 slot 拒绝通过，中断 slot 执行</li>\n<li><code>ResultStatusShouldWait</code>: 当前 slot 允许通过，但须等待一段时间</li>\n</ul>\n<h2>BlockError</h2>\n<p>BlockError 代表该调用被 Sentinel 拒绝，可通过 BlockType 获取规则触发类型。BlockError 需遵循以下规范：</p>\n<ul>\n<li>BlockError 由 <code>BlockType</code> 决定分类。</li>\n<li><code>Error()</code> 返回结果需要以 <code>SentinelBlockError: ${blockType}</code> 开头。如果有额外的信息，则置于 <code>blockMsg</code> 中。</li>\n<li>RuleCheckerSlot 返回的 BlockError 必须携带触发的规则（<code>rule</code>），并且应尽量携带当时的触发值（<code>snapshotValue</code>）。相关 slot 的注释信息应详细包含触发值的类型和描述。</li>\n</ul>\n<p>TBD：热点参数的携带方式</p>\n"
}