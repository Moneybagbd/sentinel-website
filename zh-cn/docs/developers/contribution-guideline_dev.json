{
  "filename": "contribution-guideline_dev.md",
  "__html": "<h1>Sentinel 开源贡献指南</h1>\n<p>欢迎来到 Sentinel 的世界！本文档作为基本指南来为您指引如何向 Sentinel 进行贡献。如果您发现文档中有错误或缺失的内容，请向我们联系。</p>\n<h1>准备工作</h1>\n<h2>行为准则</h2>\n<p>请保证您已经阅读过并同意遵守我们的<a href=\"https://github.com/alibaba/Sentinel/blob/master/CODE_OF_CONDUCT.md\">行为准则（Code of Conduct）</a>.</p>\n<h2>搭建开发环境</h2>\n<p>您需要在系统中安装好 JDK 1.8 或以上的版本，并安装好 Maven。您可能还需要一个 IDE 来进行开发。</p>\n<h1>贡献</h1>\n<p>我们随时都欢迎任何贡献，无论是简单的错别字修正，BUG 修复还是增加新功能。请踊跃提出问题或发起 PR。我们同样重视文档以及与其它开源项目的整合，欢迎在这方面做出贡献。</p>\n<h2>从哪里入手？</h2>\n<p>如果您是初次贡献，可以先从 <a href=\"https://github.com/alibaba/Sentinel/issues?q=is%3Aissue+is%3Aopen+label%3A%22good+first+issue%22\"><code>good first issue</code></a> 或 <a href=\"https://github.com/alibaba/Sentinel/issues?q=is%3Aissue+is%3Aopen+label%3A%22help+wanted%22\"><code>help wanted</code></a> 列表中认领一个比较小的任务来快速参与社区贡献。您可以直接在相应 issue 中回复参与意愿，然后参照下面的 GitHub 工作流指引解决 issue 并按照规范提交 PR，通过 review 后就会被 merge 到 master 分支。</p>\n<h2>GitHub 工作流</h2>\n<p>我们使用 <code>master</code> 分支作为我们的开发分支，这代表它是不稳定的分支。每个版本区间（如 0.1.x）都会创建一个 release 分支（如 <code>release-0.1</code>）作为稳定的发布分支。每发布一个新版本都会将其合并到对应的 release 分支并打上对应的 tag。</p>\n<p>下面是开源贡献者常用的工作流（workflow）：</p>\n<ol>\n<li>将仓库 fork 到自己的 GitHub 下</li>\n<li>将 fork 后的仓库 clone 到本地</li>\n<li>创建新的分支，在新的分支上进行开发操作（<strong>请确保对应的变更都有测试用例或 demo 进行验证</strong>）</li>\n<li>保持分支与远程 master 分支一致（通过 <code>fetch</code> 和 <code>rebase</code> 操作）</li>\n<li>在本地提交变更（<strong>注意 commit log 保持简练、规范</strong>），<strong>注意提交的 email 需要和 GitHub 的 email 保持一致</strong></li>\n<li>将提交 push 到 fork 的仓库下</li>\n<li>创建一个 pull request (PR)</li>\n</ol>\n<p>提交 PR 的时候请参考 <a href=\"https://github.com/alibaba/Sentinel/blob/master/.github/PULL_REQUEST_TEMPLATE.md\">PR 模板</a>。在进行较大的变更的时候请确保 PR 有一个对应的 Issue。</p>\n<p>若您是初次提交 PR，<strong>请先签署 CLA</strong>（PR 页面会有自动回复指引）。在提交 PR 后，系统会自动运行持续集成，请确保所有的 CI 均为 pass 状态。一切就绪后，我们会为 PR 分配一个或多个 reviewer。Reviewer 会对提交的代码进行 review。</p>\n<p>在合并 PR 的时候，请把多余的提交记录都 squash 成一个。最终的提交信息需要保证简练、规范。</p>\n<h2>创建 Issue / PR</h2>\n<p>我们使用 <a href=\"https://github.com/alibaba/Sentinel/issues\">GitHub Issues</a> 以及 <a href=\"https://github.com/alibaba/Sentinel/pulls\">Pull Requests</a> 来管理/追踪问题。</p>\n<p>如果您发现了文档中有表述错误，或者代码发现了 BUG，或者希望开发新的特性，或者希望提建议，可以<a href=\"https://github.com/alibaba/Sentinel/issues/new\">创建一个 Issue</a>。请参考 Issue 模板中对应的指导信息来完善 Issue 的内容，来帮助我们更好地理解您的 Issue。</p>\n<p>如果您想要贡献代码，您可以参考上面的 GitHub 工作流，提交对应的 PR。若是对当前开发版本进行提交，则目标分支为 <code>master</code>。如果您的 PR 包含非常大的变更，比如模块的重构或者添加新的组件，请<strong>务必先提出相关 issue，发起详细讨论，达成一致后再进行变更</strong>，并为其编写详细的文档来阐述其设计、解决的问题和用途。注意一个 PR 尽量不要过于大。如果的确需要有大的变更，可以将其按功能拆分成多个单独的 PR。</p>\n<h2>报告安全问题</h2>\n<p>特别地，若您发现 Sentinel 及其生态项目中有任何的安全漏洞（或潜在的安全问题），请第一时间通过 <a href=\"mailto:sentinel@linux.alibaba.com\">sentinel@linux.alibaba.com</a> 邮箱私下联系我们。在对应代码修复之前，<strong>请不要将对应安全问题对外披露，也不鼓励公开提 issue 报告安全问题</strong>。</p>\n<h2>Code review</h2>\n<p>所有的代码都需要经过 committer 进行 review。以下是我们推荐的一些原则：</p>\n<ul>\n<li>可读性：代码遵循我们的开发规约，重要代码需要有详细注释和文档</li>\n<li>优雅性：代码简练、复用度高，有着完善的设计</li>\n<li>测试：重要的代码需要有完善的测试用例（单元测试、集成测试），对应的衡量标准是测试覆盖率</li>\n</ul>\n<h1>社区</h1>\n<h2>联系我们</h2>\n<h3>邮件组</h3>\n<p>如果您有任何问题与建议，请通过邮箱 <a href=\"mailto:sentinel@linux.alibaba.com\">sentinel@linux.alibaba.com</a> 联系我们。</p>\n<h3>Gitter</h3>\n<p>我们的 Gitter room: <a href=\"https://gitter.im/alibaba/Sentinel\">https://gitter.im/alibaba/Sentinel</a>.</p>\n"
}