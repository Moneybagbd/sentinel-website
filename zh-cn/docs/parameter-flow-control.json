{
  "filename": "parameter-flow-control.md",
  "__html": "<h1>热点参数限流</h1>\n<h2>目录</h2>\n<ul>\n<li><a href=\"#overview\">Overview</a></li>\n<li><a href=\"#%E5%9F%BA%E6%9C%AC%E4%BD%BF%E7%94%A8\">基本使用</a></li>\n<li><a href=\"#%E7%83%AD%E7%82%B9%E5%8F%82%E6%95%B0%E8%A7%84%E5%88%99\">热点参数规则</a></li>\n<li><a href=\"#%E7%A4%BA%E4%BE%8B\">示例</a></li>\n</ul>\n<h2>Overview</h2>\n<p>何为热点？热点即经常访问的数据。很多时候我们希望统计某个热点数据中访问频次最高的 Top K 数据，并对其访问进行限制。比如：</p>\n<ul>\n<li>商品 ID 为参数，统计一段时间内最常购买的商品 ID 并进行限制</li>\n<li>用户 ID 为参数，针对一段时间内频繁访问的用户 ID 进行限制</li>\n</ul>\n<p>热点参数限流会统计传入参数中的热点参数，并根据配置的限流阈值与模式，对包含热点参数的资源调用进行限流。热点参数限流可以看做是一种特殊的流量控制，仅对包含热点参数的资源调用生效。</p>\n<p><img src=\"https://github.com/alibaba/Sentinel/wiki/image/sentinel-hot-param-overview-1.png\" alt=\"Sentinel Parameter Flow Control\"></p>\n<p>Sentinel 利用 LRU 策略，结合底层的滑动窗口机制来实现热点参数统计。LRU 策略可以统计单位时间内，最近最常访问的热点参数，而滑动窗口机制可以帮助统计每个参数的 QPS。</p>\n<h2>基本使用</h2>\n<p>要使用热点限流功能，需要引入以下依赖：</p>\n<pre><code class=\"language-xml\"><span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">dependency</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">groupId</span>&gt;</span>com.alibaba.csp<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">groupId</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">artifactId</span>&gt;</span>sentinel-parameter-flow-control<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">artifactId</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">version</span>&gt;</span>x.y.z<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">version</span>&gt;</span>\n<span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">dependency</span>&gt;</span>\n</code></pre>\n<p>然后为对应的资源配置热点参数限流规则，并在 <code>entry</code> 的时候传入相应的参数，即可使热点参数限流生效。</p>\n<blockquote>\n<p>注：若自行扩展并注册了自己实现的 <code>SlotChainBuilder</code>，并希望使用热点参数限流功能，则可以在 chain 里面合适的地方插入 <code>ParamFlowSlot</code>。</p>\n</blockquote>\n<p>那么如何传入对应的参数以便 Sentinel 统计呢？我们可以通过 <code>SphU</code> 类里面几个 <code>entry</code> 重载方法来传入：</p>\n<pre><code class=\"language-java\"><span class=\"hljs-function\"><span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> Entry <span class=\"hljs-title\">entry</span><span class=\"hljs-params\">(String name, EntryType type, <span class=\"hljs-keyword\">int</span> count, Object... args)</span> <span class=\"hljs-keyword\">throws</span> BlockException\n\n<span class=\"hljs-keyword\">public</span> <span class=\"hljs-keyword\">static</span> Entry <span class=\"hljs-title\">entry</span><span class=\"hljs-params\">(Method method, EntryType type, <span class=\"hljs-keyword\">int</span> count, Object... args)</span> <span class=\"hljs-keyword\">throws</span> BlockException\n</span></code></pre>\n<p>其中最后的一串 <code>args</code> 就是要传入的参数，有多个就按照次序依次传入。比如要传入两个参数 <code>paramA</code> 和 <code>paramB</code>，则可以：</p>\n<pre><code class=\"language-java\"><span class=\"hljs-comment\">// paramA in index 0, paramB in index 1.</span>\nSphU.entry(resourceName, EntryType.IN, <span class=\"hljs-number\">1</span>, paramA, paramB);\n</code></pre>\n<h2>热点参数规则</h2>\n<p>热点参数规则（<code>ParamFlowRule</code>）类似于流量控制规则（<code>FlowRule</code>）：</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">属性</th>\n<th style=\"text-align:left\">说明</th>\n<th style=\"text-align:left\">默认值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">resource</td>\n<td style=\"text-align:left\">资源名，必填</td>\n<td style=\"text-align:left\"></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">count</td>\n<td style=\"text-align:left\">限流阈值，必填</td>\n<td style=\"text-align:left\"></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">grade</td>\n<td style=\"text-align:left\">限流模式（保留字段，目前只支持 QPS 模式）</td>\n<td style=\"text-align:left\">QPS 模式</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">paramIdx</td>\n<td style=\"text-align:left\">热点参数的索引，必填，对应 <code>SphU.entry(xxx, args)</code> 中的参数索引</td>\n<td style=\"text-align:left\"></td>\n</tr>\n<tr>\n<td style=\"text-align:center\">paramFlowItemList</td>\n<td style=\"text-align:left\">参数例外项，可以针对指定的参数值单独设置限流阈值</td>\n<td style=\"text-align:left\"></td>\n</tr>\n</tbody>\n</table>\n<p>可以通过 <code>ParamFlowRuleManager</code> 的 <code>loadRules</code> 方法更新热点参数规则，下面是一个示例：</p>\n<pre><code class=\"language-java\">ParamFlowRule rule = <span class=\"hljs-keyword\">new</span> ParamFlowRule(resourceName)\n    .setParamIdx(<span class=\"hljs-number\">0</span>)\n    .setCount(<span class=\"hljs-number\">5</span>);\n<span class=\"hljs-comment\">// 针对 int 类型的参数 PARAM_B，单独设置限流 QPS 阈值为 10，而不是全局的阈值 5.</span>\nParamFlowItem item = <span class=\"hljs-keyword\">new</span> ParamFlowItem().setObject(String.valueOf(PARAM_B))\n    .setClassType(<span class=\"hljs-keyword\">int</span>.class.getName())\n    .setCount(<span class=\"hljs-number\">10</span>);\nrule.setParamFlowItemList(Collections.singletonList(item));\n\nParamFlowRuleManager.loadRules(Collections.singletonList(rule));\n</code></pre>\n<h2>示例</h2>\n<p>示例可参见 <a href=\"https://github.com/alibaba/Sentinel/blob/master/sentinel-demo/sentinel-demo-parameter-flow-control/src/main/java/com/alibaba/csp/sentinel/demo/flow/param/ParamFlowQpsDemo.java\">sentinel-demo-parameter-flow-control</a>。</p>\n",
  "link": "/zh-cn/docs/parameter-flow-control.html",
  "meta": {}
}