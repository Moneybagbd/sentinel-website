{
  "filename": "sentinel-1-7-0-release.md",
  "__html": "<h1>Sentinel 1.7.0 发布，支持 Envoy 集群流量控制</h1>\n<p>流控降级中间件 <a href=\"https://github.com/alibaba/Sentinel/releases/tag/1.7.0\">Sentinel 1.7.0</a> 版本正式发布，引入了 Envoy 集群流量控制支持、properties 文件配置、Consul/Etcd/Spring Cloud Config 动态数据源适配等多项新特性与改进。详细特性列表请参考 <a href=\"https://github.com/alibaba/Sentinel/releases/tag/1.7.0\">Release Notes</a>，欢迎大家使用并提出建议。</p>\n<p>下面我们来一起探索一下 Sentinel 1.7.0 的重要特性。</p>\n<h2>Envoy 集群流量控制</h2>\n<p><a href=\"https://www.envoyproxy.io/\">Envoy</a> 目前广泛用作 Service Mesh 的数据平面，作为 sidecar 承担路由和流量转发等任务。在 Service Mesh 中集群流量控制是保障整个集群稳定性必不可少的一环，因此 Sentinel 1.7.0 提供了 <a href=\"https://www.envoyproxy.io/docs/envoy/latest/intro/arch_overview/other_features/global_rate_limiting#arch-overview-rate-limit\">Envoy Global Rate Limiting gRPC Service</a> 的实现 —— <a href=\"https://github.com/alibaba/Sentinel/tree/master/sentinel-cluster/sentinel-cluster-server-envoy-rls\">Sentinel RLS token server</a>，借助 Sentinel 集群限流 token server 来为 Envoy 服务网格提供集群流量控制的能力。</p>\n<div style=\"text-align: center;\">\n<img src=\"https://user-images.githubusercontent.com/9434884/68639837-d2266980-0540-11ea-8997-05084e2e47bb.png\" alt=\"Envoy RLS Sentinel overview\" style=\"width: 60%;\" />\n</div>\n<p>用户只需要拉起 Sentinel RLS token server 实例并配置集群流控规则，然后在 Envoy 中进行相应的配置即可快速接入 Sentinel 的集群限流。集群流控规则项与 Envoy 的 <a href=\"https://www.envoyproxy.io/docs/envoy/v1.12.1/api-v2/api/v2/route/route.proto#envoy-api-msg-route-ratelimit\">rate limit action</a> 生成的 descriptor 相对应，支持 <code>source_cluster</code>、<code>destination_cluster</code>、<code>request_headers</code>、<code>remote_address</code>、<code>generic_key</code> 等几种策略（支持组合）。示例规则项：</p>\n<pre><code class=\"language-yaml\"><span class=\"hljs-attr\">domain:</span> <span class=\"hljs-string\">foo</span>\n<span class=\"hljs-attr\">descriptors:</span>\n<span class=\"hljs-attr\">  - resources:</span>\n<span class=\"hljs-attr\">    - key:</span> <span class=\"hljs-string\">\"destination_cluster\"</span>\n<span class=\"hljs-attr\">      value:</span> <span class=\"hljs-string\">\"service_aliyun\"</span>\n<span class=\"hljs-attr\">    count:</span> <span class=\"hljs-number\">1</span>\n<span class=\"hljs-attr\">  - resources:</span>\n<span class=\"hljs-attr\">    - key:</span> <span class=\"hljs-string\">\"remote_address\"</span>\n<span class=\"hljs-attr\">      value:</span> <span class=\"hljs-string\">\"30.40.50.60\"</span>\n<span class=\"hljs-attr\">    count:</span> <span class=\"hljs-number\">10</span>\n</code></pre>\n<p>上面的示例配置了两条规则，针对的 domain 都是 <code>foo</code>（与 Envoy 的配置相对应），其中一条规则会对所有目标为 <code>service_aliyun</code> 集群的请求进行控制，QPS 最大为 1；另一条规则控制所有来源 IP 为 <code>30.40.50.60</code> 的请求每秒不超过 10 次。</p>\n<p>我们提供了 <a href=\"https://github.com/alibaba/Sentinel/tree/master/sentinel-cluster/sentinel-cluster-server-envoy-rls/sample/k8s\">Sentinel RLS token server 在 Kubernetes 环境的示例</a>，方便大家在 K8s 集群中快速体验 Sentinel 集群限流的能力。</p>\n<p>在后续的版本我们还会改进规则动态配置的方式，支持 Kubernetes CRD 的形式配置规则，同时结合 <a href=\"https://github.com/alibaba/sentinel-cpp\">Sentinel C++</a> 版本提供原生的 Envoy Filter。未来我们还会提供 Istio 的支持，让 Sentinel 在 Service Mesh 中发挥更为重要的作用。</p>\n<h2>properties 文件配置支持</h2>\n<p>Sentinel 1.7.0 优化了加载<a href=\"https://github.com/alibaba/Sentinel/wiki/%E5%90%AF%E5%8A%A8%E9%85%8D%E7%BD%AE%E9%A1%B9\">启动配置项</a>的方式，支持将配置项直接配置在 properties 文件中。用户只需要通过 <code>-Dcsp.sentinel.config.file</code> 参数配置 properties 文件的路径即可，从而简化了通用配置的方式。</p>\n<h2>动态数据源适配</h2>\n<p>Sentinel 1.7.0 新增了以下三种动态数据源的支持，用户可以利用这些动态数据源保存、拉取规则：</p>\n<ul>\n<li><a href=\"https://github.com/alibaba/Sentinel/tree/master/sentinel-extension/sentinel-datasource-etcd\">Etcd 数据源</a></li>\n<li><a href=\"https://github.com/alibaba/Sentinel/tree/master/sentinel-extension/sentinel-datasource-consul\">Consul 数据源</a></li>\n<li><a href=\"https://github.com/alibaba/Sentinel/tree/master/sentinel-extension/sentinel-datasource-spring-cloud-config\">Spring Cloud Config 数据源</a></li>\n</ul>\n<p>至此，Sentinel 已经支持了七种常用的配置中心，可以覆盖大部分的规则推送场景。</p>\n<h2>Start hacking</h2>\n<p>值得注意的是，Sentinel 1.7.0 有近一半的特性都是由社区开发者贡献的，许多的特性都是社区里面进行充分讨论和 review 后出炉的，因此我们可以称 Sentinel 1.7.0 是一个社区一起定义的版本。我们非常欢迎大家持续参与社区贡献，一起来参与未来版本的演进。若您有意愿参与社区贡献，可以参考 <a href=\"https://github.com/alibaba/Sentinel/issues/391\">贡献指南</a> 来入门，同时也欢迎联系我们加入 Sentinel 核心贡献小组认领任务。积极参与贡献的开发者我们会重点关注，有机会被提名为 Committer。Now start hacking!</p>\n"
}